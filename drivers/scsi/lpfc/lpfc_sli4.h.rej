--- drivers/scsi/lpfc/lpfc_sli4.h
+++ drivers/scsi/lpfc/lpfc_sli4.h
@@ -157,25 +155,6 @@
 #define RECORD_VALID	0x02
 };
 
-struct lpfc_fcf_pri_rec {
-	uint16_t fcf_index;
-#define LPFC_FCF_ON_PRI_LIST 0x0001
-#define LPFC_FCF_FLOGI_FAILED 0x0002
-	uint16_t flag;
-	uint32_t priority;
-};
-
-struct lpfc_fcf_pri {
-	struct list_head list;
-	struct lpfc_fcf_pri_rec fcf_rec;
-};
-
-/*
- * Maximum FCF table index, it is for driver internal book keeping, it
- * just needs to be no less than the supported HBA's FCF table size.
- */
-#define LPFC_SLI4_FCF_TBL_INDX_MAX	32
-
 struct lpfc_fcf {
 	uint16_t fcfi;
 	uint32_t fcf_flag;
@@ -195,13 +174,15 @@
 	uint32_t eligible_fcf_cnt;
 	struct lpfc_fcf_rec current_rec;
 	struct lpfc_fcf_rec failover_rec;
-	struct list_head fcf_pri_list;
-	struct lpfc_fcf_pri fcf_pri[LPFC_SLI4_FCF_TBL_INDX_MAX];
-	uint32_t current_fcf_scan_pri;
 	struct timer_list redisc_wait;
 	unsigned long *fcf_rr_bmask; /* Eligible FCF indexes for RR failover */
 };
 
+/*
+ * Maximum FCF table index, it is for driver internal book keeping, it
+ * just needs to be no less than the supported HBA's FCF table size.
+ */
+#define LPFC_SLI4_FCF_TBL_INDX_MAX	32
 
 #define LPFC_REGION23_SIGNATURE "RG23"
 #define LPFC_REGION23_VERSION	1
