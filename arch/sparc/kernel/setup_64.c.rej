--- arch/sparc/kernel/setup_64.c
+++ arch/sparc/kernel/setup_64.c
@@ -103,7 +100,7 @@
 		prom_halt();
 		break;
 	case 'p':
-		prom_early_console.flags &= ~CON_BOOT;
+		/* Just ignore, this behavior is now the default.  */
 		break;
 	case 'P':
 		/* Force UltraSPARC-III P-Cache on. */
@@ -278,168 +241,6 @@
 }
 #endif
 
-/* On Ultra, we support all of the v8 capabilities. */
-unsigned long sparc64_elf_hwcap = (HWCAP_SPARC_FLUSH | HWCAP_SPARC_STBAR |
-				   HWCAP_SPARC_SWAP | HWCAP_SPARC_MULDIV |
-				   HWCAP_SPARC_V9);
-EXPORT_SYMBOL(sparc64_elf_hwcap);
-
-static const char *hwcaps[] = {
-	"flush", "stbar", "swap", "muldiv", "v9",
-	"ultra3", "blkinit", "n2",
-
-	/* These strings are as they appear in the machine description
-	 * 'hwcap-list' property for cpu nodes.
-	 */
-	"mul32", "div32", "fsmuld", "v8plus", "popc", "vis", "vis2",
-	"ASIBlkInit", "fmaf", "vis3", "hpc", "random", "trans", "fjfmau",
-	"ima", "cspare",
-};
-
-void cpucap_info(struct seq_file *m)
-{
-	unsigned long caps = sparc64_elf_hwcap;
-	int i, printed = 0;
-
-	seq_puts(m, "cpucaps\t\t: ");
-	for (i = 0; i < ARRAY_SIZE(hwcaps); i++) {
-		unsigned long bit = 1UL << i;
-		if (caps & bit) {
-			seq_printf(m, "%s%s",
-				   printed ? "," : "", hwcaps[i]);
-			printed++;
-		}
-	}
-	seq_putc(m, '\n');
-}
-
-static void __init report_hwcaps(unsigned long caps)
-{
-	int i, printed = 0;
-
-	printk(KERN_INFO "CPU CAPS: [");
-	for (i = 0; i < ARRAY_SIZE(hwcaps); i++) {
-		unsigned long bit = 1UL << i;
-		if (caps & bit) {
-			printk(KERN_CONT "%s%s",
-			       printed ? "," : "", hwcaps[i]);
-			if (++printed == 8) {
-				printk(KERN_CONT "]\n");
-				printk(KERN_INFO "CPU CAPS: [");
-				printed = 0;
-			}
-		}
-	}
-	printk(KERN_CONT "]\n");
-}
-
-static unsigned long __init mdesc_cpu_hwcap_list(void)
-{
-	struct mdesc_handle *hp;
-	unsigned long caps = 0;
-	const char *prop;
-	int len;
-	u64 pn;
-
-	hp = mdesc_grab();
-	if (!hp)
-		return 0;
-
-	pn = mdesc_node_by_name(hp, MDESC_NODE_NULL, "cpu");
-	if (pn == MDESC_NODE_NULL)
-		goto out;
-
-	prop = mdesc_get_property(hp, pn, "hwcap-list", &len);
-	if (!prop)
-		goto out;
-
-	while (len) {
-		int i, plen;
-
-		for (i = 0; i < ARRAY_SIZE(hwcaps); i++) {
-			unsigned long bit = 1UL << i;
-
-			if (!strcmp(prop, hwcaps[i])) {
-				caps |= bit;
-				break;
-			}
-		}
-
-		plen = strlen(prop) + 1;
-		prop += plen;
-		len -= plen;
-	}
-
-out:
-	mdesc_release(hp);
-	return caps;
-}
-
-/* This yields a mask that user programs can use to figure out what
- * instruction set this cpu supports.
- */
-static void __init init_sparc64_elf_hwcap(void)
-{
-	unsigned long cap = sparc64_elf_hwcap;
-	unsigned long mdesc_caps;
-
-	if (tlb_type == cheetah || tlb_type == cheetah_plus)
-		cap |= HWCAP_SPARC_ULTRA3;
-	else if (tlb_type == hypervisor) {
-		if (sun4v_chip_type == SUN4V_CHIP_NIAGARA1 ||
-		    sun4v_chip_type == SUN4V_CHIP_NIAGARA2 ||
-		    sun4v_chip_type == SUN4V_CHIP_NIAGARA3 ||
-		    sun4v_chip_type == SUN4V_CHIP_NIAGARA4 ||
-		    sun4v_chip_type == SUN4V_CHIP_NIAGARA5)
-			cap |= HWCAP_SPARC_BLKINIT;
-		if (sun4v_chip_type == SUN4V_CHIP_NIAGARA2 ||
-		    sun4v_chip_type == SUN4V_CHIP_NIAGARA3 ||
-		    sun4v_chip_type == SUN4V_CHIP_NIAGARA4 ||
-		    sun4v_chip_type == SUN4V_CHIP_NIAGARA5)
-			cap |= HWCAP_SPARC_N2;
-	}
-
-	cap |= (AV_SPARC_MUL32 | AV_SPARC_DIV32 | AV_SPARC_V8PLUS);
-
-	mdesc_caps = mdesc_cpu_hwcap_list();
-	if (!mdesc_caps) {
-		if (tlb_type == spitfire)
-			cap |= AV_SPARC_VIS;
-		if (tlb_type == cheetah || tlb_type == cheetah_plus)
-			cap |= AV_SPARC_VIS | AV_SPARC_VIS2;
-		if (tlb_type == cheetah_plus) {
-			unsigned long impl, ver;
-
-			__asm__ __volatile__("rdpr %%ver, %0" : "=r" (ver));
-			impl = ((ver >> 32) & 0xffff);
-			if (impl == PANTHER_IMPL)
-				cap |= AV_SPARC_POPC;
-		}
-		if (tlb_type == hypervisor) {
-			if (sun4v_chip_type == SUN4V_CHIP_NIAGARA1)
-				cap |= AV_SPARC_ASI_BLK_INIT;
-			if (sun4v_chip_type == SUN4V_CHIP_NIAGARA2 ||
-			    sun4v_chip_type == SUN4V_CHIP_NIAGARA3 ||
-			    sun4v_chip_type == SUN4V_CHIP_NIAGARA4 ||
-			    sun4v_chip_type == SUN4V_CHIP_NIAGARA5)
-				cap |= (AV_SPARC_VIS | AV_SPARC_VIS2 |
-					AV_SPARC_ASI_BLK_INIT |
-					AV_SPARC_POPC);
-			if (sun4v_chip_type == SUN4V_CHIP_NIAGARA3 ||
-			    sun4v_chip_type == SUN4V_CHIP_NIAGARA4 ||
-			    sun4v_chip_type == SUN4V_CHIP_NIAGARA5)
-				cap |= (AV_SPARC_VIS3 | AV_SPARC_HPC |
-					AV_SPARC_FMAF);
-		}
-	}
-	sparc64_elf_hwcap = cap | mdesc_caps;
-
-	report_hwcaps(sparc64_elf_hwcap);
-
-	if (sparc64_elf_hwcap & AV_SPARC_POPC)
-		popc_patch();
-}
-
 void __init setup_arch(char **cmdline_p)
 {
 	/* Initialize PROM console and command line. */
