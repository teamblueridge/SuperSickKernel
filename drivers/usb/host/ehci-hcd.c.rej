--- drivers/usb/host/ehci-hcd.c
+++ drivers/usb/host/ehci-hcd.c
@@ -114,7 +113,7 @@
 /* for link power management(LPM) feature */
 static unsigned int hird;
 module_param(hird, int, S_IRUGO);
-MODULE_PARM_DESC(hird, "host initiated resume duration, +1 for each 75us");
+MODULE_PARM_DESC(hird, "host initiated resume duration, +1 for each 75us\n");
 
 #define	INTR_MASK (STS_IAA | STS_FATAL | STS_PCD | STS_ERR | STS_INT)
 
@@ -340,7 +342,6 @@
 #include "ehci-mem.c"
 #include "ehci-q.c"
 #include "ehci-sched.c"
-#include "ehci-sysfs.c"
 
 /*-------------------------------------------------------------------------*/
 
@@ -525,7 +526,7 @@
 	ehci_reset (ehci);
 	spin_unlock_irq(&ehci->lock);
 
-	remove_sysfs_files(ehci);
+	remove_companion_file(ehci);
 	remove_debug_files (ehci);
 
 	/* root hub is shut down separately (first, when possible) */
@@ -576,12 +577,6 @@
 	hcc_params = ehci_readl(ehci, &ehci->caps->hcc_params);
 
 	/*
-	 * by default set standard 80% (== 100 usec/uframe) max periodic
-	 * bandwidth as required by USB 2.0
-	 */
-	ehci->uframe_periodic_max = 100;
-
-	/*
 	 * hw default: 1K periodic list heads, one per frame.
 	 * periodic_size can shrink by USBCMD update if hcc_params allows.
 	 */
@@ -765,7 +760,7 @@
 	 * since the class device isn't created that early.
 	 */
 	create_debug_files(ehci);
-	create_sysfs_files(ehci);
+	create_companion_file(ehci);
 
 	return 0;
 }
